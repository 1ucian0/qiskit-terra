# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - master
      - stable/*
  tags:
    include:
      - '*'

stages:
  - stage: 'Python_Tests'
    condition: and(succeeded('Lint_and_Tests'), not(startsWith(variables['Build.SourceBranch'], 'refs/tags')))
    jobs:
    - job: 'MacOS_HighSierra_Tests'
      pool: {vmImage: 'macOS-10.13'}
      condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags'))
      variables:
        MPLBACKEND: ps
      strategy:
        matrix:
          Python36:
            python.version: '3.6'
          Python37:
            python.version: '3.7'
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'
        - bash: |
            set -e
            python -m pip install --upgrade pip
            pip install -U -r requirements.txt -r requirements-dev.txt -c constraints.txt
            pip install -e .
            pip install "qiskit-ibmq-provider" -c constraints.txt
            python setup.py build_ext --inplace
          displayName: 'Install dependencies'
        - bash: |
            set -e
            stestr run --concurrency 2
          displayName: 'Run tests'
        - bash: |
            set -e
            pip install -U junitxml
            mkdir -p junit
            stestr last --subunit | tools/subunit_to_junit.py -o junit/test-results.xml
          condition: succeededOrFailed()
          displayName: 'Generate results'
        - task: PublishTestResults@2
          condition: succeededOrFailed()
          inputs:
            testResultsFiles: '**/test-*.xml'
            testRunTitle: 'Test results for macOS Python $(python.version)'
        - task: PublishBuildArtifacts@1
          inputs:
            pathtoPublish: '$(Build.ArtifactStagingDirectory)'
            artifactName: temp.png
